//
// Created by shb on 24-6-5.
//
#include <cstdint>
#include <cstddef>
#include <list>
#include <vector>
namespace simhash {

#ifdef __AVX2__
alignas(32) static const int32_t lookup[256][8] = {
    {-1, -1, -1, -1, -1, -1, -1, -1}, {1, -1, -1, -1, -1, -1, -1, -1},
    {-1, 1, -1, -1, -1, -1, -1, -1},  {1, 1, -1, -1, -1, -1, -1, -1},
    {-1, -1, 1, -1, -1, -1, -1, -1},  {1, -1, 1, -1, -1, -1, -1, -1},
    {-1, 1, 1, -1, -1, -1, -1, -1},   {1, 1, 1, -1, -1, -1, -1, -1},
    {-1, -1, -1, 1, -1, -1, -1, -1},  {1, -1, -1, 1, -1, -1, -1, -1},
    {-1, 1, -1, 1, -1, -1, -1, -1},   {1, 1, -1, 1, -1, -1, -1, -1},
    {-1, -1, 1, 1, -1, -1, -1, -1},   {1, -1, 1, 1, -1, -1, -1, -1},
    {-1, 1, 1, 1, -1, -1, -1, -1},    {1, 1, 1, 1, -1, -1, -1, -1},
    {-1, -1, -1, -1, 1, -1, -1, -1},  {1, -1, -1, -1, 1, -1, -1, -1},
    {-1, 1, -1, -1, 1, -1, -1, -1},   {1, 1, -1, -1, 1, -1, -1, -1},
    {-1, -1, 1, -1, 1, -1, -1, -1},   {1, -1, 1, -1, 1, -1, -1, -1},
    {-1, 1, 1, -1, 1, -1, -1, -1},    {1, 1, 1, -1, 1, -1, -1, -1},
    {-1, -1, -1, 1, 1, -1, -1, -1},   {1, -1, -1, 1, 1, -1, -1, -1},
    {-1, 1, -1, 1, 1, -1, -1, -1},    {1, 1, -1, 1, 1, -1, -1, -1},
    {-1, -1, 1, 1, 1, -1, -1, -1},    {1, -1, 1, 1, 1, -1, -1, -1},
    {-1, 1, 1, 1, 1, -1, -1, -1},     {1, 1, 1, 1, 1, -1, -1, -1},
    {-1, -1, -1, -1, -1, 1, -1, -1},  {1, -1, -1, -1, -1, 1, -1, -1},
    {-1, 1, -1, -1, -1, 1, -1, -1},   {1, 1, -1, -1, -1, 1, -1, -1},
    {-1, -1, 1, -1, -1, 1, -1, -1},   {1, -1, 1, -1, -1, 1, -1, -1},
    {-1, 1, 1, -1, -1, 1, -1, -1},    {1, 1, 1, -1, -1, 1, -1, -1},
    {-1, -1, -1, 1, -1, 1, -1, -1},   {1, -1, -1, 1, -1, 1, -1, -1},
    {-1, 1, -1, 1, -1, 1, -1, -1},    {1, 1, -1, 1, -1, 1, -1, -1},
    {-1, -1, 1, 1, -1, 1, -1, -1},    {1, -1, 1, 1, -1, 1, -1, -1},
    {-1, 1, 1, 1, -1, 1, -1, -1},     {1, 1, 1, 1, -1, 1, -1, -1},
    {-1, -1, -1, -1, 1, 1, -1, -1},   {1, -1, -1, -1, 1, 1, -1, -1},
    {-1, 1, -1, -1, 1, 1, -1, -1},    {1, 1, -1, -1, 1, 1, -1, -1},
    {-1, -1, 1, -1, 1, 1, -1, -1},    {1, -1, 1, -1, 1, 1, -1, -1},
    {-1, 1, 1, -1, 1, 1, -1, -1},     {1, 1, 1, -1, 1, 1, -1, -1},
    {-1, -1, -1, 1, 1, 1, -1, -1},    {1, -1, -1, 1, 1, 1, -1, -1},
    {-1, 1, -1, 1, 1, 1, -1, -1},     {1, 1, -1, 1, 1, 1, -1, -1},
    {-1, -1, 1, 1, 1, 1, -1, -1},     {1, -1, 1, 1, 1, 1, -1, -1},
    {-1, 1, 1, 1, 1, 1, -1, -1},      {1, 1, 1, 1, 1, 1, -1, -1},
    {-1, -1, -1, -1, -1, -1, 1, -1},  {1, -1, -1, -1, -1, -1, 1, -1},
    {-1, 1, -1, -1, -1, -1, 1, -1},   {1, 1, -1, -1, -1, -1, 1, -1},
    {-1, -1, 1, -1, -1, -1, 1, -1},   {1, -1, 1, -1, -1, -1, 1, -1},
    {-1, 1, 1, -1, -1, -1, 1, -1},    {1, 1, 1, -1, -1, -1, 1, -1},
    {-1, -1, -1, 1, -1, -1, 1, -1},   {1, -1, -1, 1, -1, -1, 1, -1},
    {-1, 1, -1, 1, -1, -1, 1, -1},    {1, 1, -1, 1, -1, -1, 1, -1},
    {-1, -1, 1, 1, -1, -1, 1, -1},    {1, -1, 1, 1, -1, -1, 1, -1},
    {-1, 1, 1, 1, -1, -1, 1, -1},     {1, 1, 1, 1, -1, -1, 1, -1},
    {-1, -1, -1, -1, 1, -1, 1, -1},   {1, -1, -1, -1, 1, -1, 1, -1},
    {-1, 1, -1, -1, 1, -1, 1, -1},    {1, 1, -1, -1, 1, -1, 1, -1},
    {-1, -1, 1, -1, 1, -1, 1, -1},    {1, -1, 1, -1, 1, -1, 1, -1},
    {-1, 1, 1, -1, 1, -1, 1, -1},     {1, 1, 1, -1, 1, -1, 1, -1},
    {-1, -1, -1, 1, 1, -1, 1, -1},    {1, -1, -1, 1, 1, -1, 1, -1},
    {-1, 1, -1, 1, 1, -1, 1, -1},     {1, 1, -1, 1, 1, -1, 1, -1},
    {-1, -1, 1, 1, 1, -1, 1, -1},     {1, -1, 1, 1, 1, -1, 1, -1},
    {-1, 1, 1, 1, 1, -1, 1, -1},      {1, 1, 1, 1, 1, -1, 1, -1},
    {-1, -1, -1, -1, -1, 1, 1, -1},   {1, -1, -1, -1, -1, 1, 1, -1},
    {-1, 1, -1, -1, -1, 1, 1, -1},    {1, 1, -1, -1, -1, 1, 1, -1},
    {-1, -1, 1, -1, -1, 1, 1, -1},    {1, -1, 1, -1, -1, 1, 1, -1},
    {-1, 1, 1, -1, -1, 1, 1, -1},     {1, 1, 1, -1, -1, 1, 1, -1},
    {-1, -1, -1, 1, -1, 1, 1, -1},    {1, -1, -1, 1, -1, 1, 1, -1},
    {-1, 1, -1, 1, -1, 1, 1, -1},     {1, 1, -1, 1, -1, 1, 1, -1},
    {-1, -1, 1, 1, -1, 1, 1, -1},     {1, -1, 1, 1, -1, 1, 1, -1},
    {-1, 1, 1, 1, -1, 1, 1, -1},      {1, 1, 1, 1, -1, 1, 1, -1},
    {-1, -1, -1, -1, 1, 1, 1, -1},    {1, -1, -1, -1, 1, 1, 1, -1},
    {-1, 1, -1, -1, 1, 1, 1, -1},     {1, 1, -1, -1, 1, 1, 1, -1},
    {-1, -1, 1, -1, 1, 1, 1, -1},     {1, -1, 1, -1, 1, 1, 1, -1},
    {-1, 1, 1, -1, 1, 1, 1, -1},      {1, 1, 1, -1, 1, 1, 1, -1},
    {-1, -1, -1, 1, 1, 1, 1, -1},     {1, -1, -1, 1, 1, 1, 1, -1},
    {-1, 1, -1, 1, 1, 1, 1, -1},      {1, 1, -1, 1, 1, 1, 1, -1},
    {-1, -1, 1, 1, 1, 1, 1, -1},      {1, -1, 1, 1, 1, 1, 1, -1},
    {-1, 1, 1, 1, 1, 1, 1, -1},       {1, 1, 1, 1, 1, 1, 1, -1},
    {-1, -1, -1, -1, -1, -1, -1, 1},  {1, -1, -1, -1, -1, -1, -1, 1},
    {-1, 1, -1, -1, -1, -1, -1, 1},   {1, 1, -1, -1, -1, -1, -1, 1},
    {-1, -1, 1, -1, -1, -1, -1, 1},   {1, -1, 1, -1, -1, -1, -1, 1},
    {-1, 1, 1, -1, -1, -1, -1, 1},    {1, 1, 1, -1, -1, -1, -1, 1},
    {-1, -1, -1, 1, -1, -1, -1, 1},   {1, -1, -1, 1, -1, -1, -1, 1},
    {-1, 1, -1, 1, -1, -1, -1, 1},    {1, 1, -1, 1, -1, -1, -1, 1},
    {-1, -1, 1, 1, -1, -1, -1, 1},    {1, -1, 1, 1, -1, -1, -1, 1},
    {-1, 1, 1, 1, -1, -1, -1, 1},     {1, 1, 1, 1, -1, -1, -1, 1},
    {-1, -1, -1, -1, 1, -1, -1, 1},   {1, -1, -1, -1, 1, -1, -1, 1},
    {-1, 1, -1, -1, 1, -1, -1, 1},    {1, 1, -1, -1, 1, -1, -1, 1},
    {-1, -1, 1, -1, 1, -1, -1, 1},    {1, -1, 1, -1, 1, -1, -1, 1},
    {-1, 1, 1, -1, 1, -1, -1, 1},     {1, 1, 1, -1, 1, -1, -1, 1},
    {-1, -1, -1, 1, 1, -1, -1, 1},    {1, -1, -1, 1, 1, -1, -1, 1},
    {-1, 1, -1, 1, 1, -1, -1, 1},     {1, 1, -1, 1, 1, -1, -1, 1},
    {-1, -1, 1, 1, 1, -1, -1, 1},     {1, -1, 1, 1, 1, -1, -1, 1},
    {-1, 1, 1, 1, 1, -1, -1, 1},      {1, 1, 1, 1, 1, -1, -1, 1},
    {-1, -1, -1, -1, -1, 1, -1, 1},   {1, -1, -1, -1, -1, 1, -1, 1},
    {-1, 1, -1, -1, -1, 1, -1, 1},    {1, 1, -1, -1, -1, 1, -1, 1},
    {-1, -1, 1, -1, -1, 1, -1, 1},    {1, -1, 1, -1, -1, 1, -1, 1},
    {-1, 1, 1, -1, -1, 1, -1, 1},     {1, 1, 1, -1, -1, 1, -1, 1},
    {-1, -1, -1, 1, -1, 1, -1, 1},    {1, -1, -1, 1, -1, 1, -1, 1},
    {-1, 1, -1, 1, -1, 1, -1, 1},     {1, 1, -1, 1, -1, 1, -1, 1},
    {-1, -1, 1, 1, -1, 1, -1, 1},     {1, -1, 1, 1, -1, 1, -1, 1},
    {-1, 1, 1, 1, -1, 1, -1, 1},      {1, 1, 1, 1, -1, 1, -1, 1},
    {-1, -1, -1, -1, 1, 1, -1, 1},    {1, -1, -1, -1, 1, 1, -1, 1},
    {-1, 1, -1, -1, 1, 1, -1, 1},     {1, 1, -1, -1, 1, 1, -1, 1},
    {-1, -1, 1, -1, 1, 1, -1, 1},     {1, -1, 1, -1, 1, 1, -1, 1},
    {-1, 1, 1, -1, 1, 1, -1, 1},      {1, 1, 1, -1, 1, 1, -1, 1},
    {-1, -1, -1, 1, 1, 1, -1, 1},     {1, -1, -1, 1, 1, 1, -1, 1},
    {-1, 1, -1, 1, 1, 1, -1, 1},      {1, 1, -1, 1, 1, 1, -1, 1},
    {-1, -1, 1, 1, 1, 1, -1, 1},      {1, -1, 1, 1, 1, 1, -1, 1},
    {-1, 1, 1, 1, 1, 1, -1, 1},       {1, 1, 1, 1, 1, 1, -1, 1},
    {-1, -1, -1, -1, -1, -1, 1, 1},   {1, -1, -1, -1, -1, -1, 1, 1},
    {-1, 1, -1, -1, -1, -1, 1, 1},    {1, 1, -1, -1, -1, -1, 1, 1},
    {-1, -1, 1, -1, -1, -1, 1, 1},    {1, -1, 1, -1, -1, -1, 1, 1},
    {-1, 1, 1, -1, -1, -1, 1, 1},     {1, 1, 1, -1, -1, -1, 1, 1},
    {-1, -1, -1, 1, -1, -1, 1, 1},    {1, -1, -1, 1, -1, -1, 1, 1},
    {-1, 1, -1, 1, -1, -1, 1, 1},     {1, 1, -1, 1, -1, -1, 1, 1},
    {-1, -1, 1, 1, -1, -1, 1, 1},     {1, -1, 1, 1, -1, -1, 1, 1},
    {-1, 1, 1, 1, -1, -1, 1, 1},      {1, 1, 1, 1, -1, -1, 1, 1},
    {-1, -1, -1, -1, 1, -1, 1, 1},    {1, -1, -1, -1, 1, -1, 1, 1},
    {-1, 1, -1, -1, 1, -1, 1, 1},     {1, 1, -1, -1, 1, -1, 1, 1},
    {-1, -1, 1, -1, 1, -1, 1, 1},     {1, -1, 1, -1, 1, -1, 1, 1},
    {-1, 1, 1, -1, 1, -1, 1, 1},      {1, 1, 1, -1, 1, -1, 1, 1},
    {-1, -1, -1, 1, 1, -1, 1, 1},     {1, -1, -1, 1, 1, -1, 1, 1},
    {-1, 1, -1, 1, 1, -1, 1, 1},      {1, 1, -1, 1, 1, -1, 1, 1},
    {-1, -1, 1, 1, 1, -1, 1, 1},      {1, -1, 1, 1, 1, -1, 1, 1},
    {-1, 1, 1, 1, 1, -1, 1, 1},       {1, 1, 1, 1, 1, -1, 1, 1},
    {-1, -1, -1, -1, -1, 1, 1, 1},    {1, -1, -1, -1, -1, 1, 1, 1},
    {-1, 1, -1, -1, -1, 1, 1, 1},     {1, 1, -1, -1, -1, 1, 1, 1},
    {-1, -1, 1, -1, -1, 1, 1, 1},     {1, -1, 1, -1, -1, 1, 1, 1},
    {-1, 1, 1, -1, -1, 1, 1, 1},      {1, 1, 1, -1, -1, 1, 1, 1},
    {-1, -1, -1, 1, -1, 1, 1, 1},     {1, -1, -1, 1, -1, 1, 1, 1},
    {-1, 1, -1, 1, -1, 1, 1, 1},      {1, 1, -1, 1, -1, 1, 1, 1},
    {-1, -1, 1, 1, -1, 1, 1, 1},      {1, -1, 1, 1, -1, 1, 1, 1},
    {-1, 1, 1, 1, -1, 1, 1, 1},       {1, 1, 1, 1, -1, 1, 1, 1},
    {-1, -1, -1, -1, 1, 1, 1, 1},     {1, -1, -1, -1, 1, 1, 1, 1},
    {-1, 1, -1, -1, 1, 1, 1, 1},      {1, 1, -1, -1, 1, 1, 1, 1},
    {-1, -1, 1, -1, 1, 1, 1, 1},      {1, -1, 1, -1, 1, 1, 1, 1},
    {-1, 1, 1, -1, 1, 1, 1, 1},       {1, 1, 1, -1, 1, 1, 1, 1},
    {-1, -1, -1, 1, 1, 1, 1, 1},      {1, -1, -1, 1, 1, 1, 1, 1},
    {-1, 1, -1, 1, 1, 1, 1, 1},       {1, 1, -1, 1, 1, 1, 1, 1},
    {-1, -1, 1, 1, 1, 1, 1, 1},       {1, -1, 1, 1, 1, 1, 1, 1},
    {-1, 1, 1, 1, 1, 1, 1, 1},        {1, 1, 1, 1, 1, 1, 1, 1}};

struct SimHash {
  alignas(32) static int32_t lookup2[256][256][8];
  alignas(32) static int16_t lookup_16b[65536][16];
  static bool is_lookup2_initialized;
  static bool is_lookup_16b_initialized;

  static void* LoopUp2(uint32_t and_value, uint32_t hash_byte);

  static void* LoopUp16b(uint32_t hash_byte);
};
#endif

/**
 * The type of all hashes.
 */
typedef uint32_t hash_t;
/**
 * The number of bits in a hash_t.
 */
static const size_t BITS = sizeof(hash_t) * 8;

hash_t simhash(const std::vector<hash_t>& hashes);

hash_t simhash2(const std::vector<hash_t>& hashes);

uint64_t simhash_ex(const std::vector<hash_t>& hashes);

#ifdef __AVX2__
hash_t simhash_avx2(const hash_t* hashes, uint32_t hash_num);

hash_t simhash_avx2_16b(const hash_t* hashes, uint32_t hash_num);

hash_t simhash_avx2v2(const hash_t* hashes, uint32_t hash_num);
#endif

}  // namespace simhash